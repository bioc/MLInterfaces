\name{MLIntInternals}
 \alias{getGrid}
 \alias{getGrid,data.frame-method}
 \alias{getGrid,ExpressionSet-method}
\alias{MLLabel }
\alias{MLOutput }
\alias{MLScore }
\alias{SOMBout }
\alias{classifOutput }
\alias{clustOutput }
\alias{groupIndex}
\alias{membMat }
\alias{probArray }
\alias{probMat }
\alias{qualScore }
\alias{silhouetteVec }
\alias{somout}

\alias{MLIConverter.Bgbm}
\alias{MLIConverter.RAB}
\alias{MLIConverter.blackboost}
\alias{MLIConverter.dlda}
\alias{MLIConverter.knn}
\alias{MLIConverter.knncv}
\alias{MLIConverter.ksvm}
\alias{MLIConverter.ldaPredMeth}
\alias{MLIConverter.logistic}
\alias{MLIConverter.naiveBayes}
\alias{MLIConverter.nnet}
\alias{MLIConverter.plsda}
\alias{MLIConverter.randomForest}
\alias{MLIConverter.rpart}
\alias{MLIConverter.selftesting}
\alias{MLIConverter.slda}
\alias{MLIConverter.svm}
\alias{MLIConverterListEl.class}
\alias{MLIConverterPredType.class}
\alias{MLIPredicter.knn}
\alias{MLIPredicter.ksvm}
\alias{MLIPredicter.naiveBayes}
\alias{MLIPredicter.nnet}
\alias{MLIPredicter.plsda}
\alias{MLIPredicter.randomForest}
\alias{MLIPredicter.svm}
\alias{cverrs}
\alias{es2df}
\alias{hclustConverter}
\alias{kmeansConverter}
\alias{makeClusteringSchema}
\alias{makeConfuMat}
\alias{mapPSvec}
\alias{naAs0}
\alias{pamConverter}
\alias{partPlot}
\alias{planarPlot2}
\alias{plspinDF}
\alias{predict.RAB}
\alias{predict.dlda2}
\alias{predict.gbm2}
\alias{predict.knn.cv2}
\alias{predict.knn2}
\alias{predict.lvq}
\alias{x}


\title{MLInterfaces infrastructure}
\description{
These functions are internal tools for \code{MLInterfaces}.
Users will generally not call these functions directly.
}
\usage{
getGrid(x)
}

\arguments{
  \item{x}{a vector or matrix or ExpressionSet}
}
\details{
Forthcoming.
}
\value{
Functions with `new' as prefix are constructor helpers.
}

\author{VJ Carey <stvjc@channing.harvard.edu>}

\keyword{ classif }

